---
- name: Check if cephadm-ansible package is installed
  ansible.builtin.package_facts:
    manager: "auto"

- name: Check if /usr/bin/cephadm exists
  ansible.builtin.stat:
    path: /usr/bin/cephadm
  register: cephadm_binary

- name: Install cephadm-ansible
  ansible.builtin.dnf:
    name: cephadm-ansible
    state: present
  when: 
    - "'cephadm-ansible' not in ansible_facts.packages"
    - cephadm_binary.stat.exists == false

- name: Check if Ceph cluster already exists
  stat:
    path: /etc/ceph/ceph.conf
  register: ceph_conf
  delegate_to: "{{ groups['admin'][0] }}"
  run_once: true

- name: Gather installed packages
  package_facts:
    manager: "auto" 

- name: Login to Ceph registry
  cephadm_registry_login:
    state: "{{ state }}"
    registry_url: "{{ registry_url }}"
    registry_username: "{{ registry_username }}"
    registry_password: "{{ registry_password }}"
  when: 
    - ceph_release == "ibm"
    - "'cephadm-ansible' in ansible_facts.packages"

- name: Set cluster_network fact if network_cidr is defined
  set_fact:
    cluster_network_fact: "{{ network_cidr }}"
  when: network_cidr is defined

- name: Gather facts for all hosts
  ansible.builtin.setup:
    gather_subset:
      - 'all'

- name: Count the number of hosts
  set_fact:
    host_count: "{{ groups['all'] | length }}"

- name: Set single_host_defaults if only one host
  set_fact:
    single_host_defaults: true
  when: host_count | int <= 1

- name: Debug single_host_defaults value
  debug:
    var: single_host_defaults

- name: Set apply_spec fact if spec_file_path is defined
  set_fact:
    apply_spec: "{{ spec_file_path }}"
  when: spec_file_path is defined

- name: Debug apply_spec value
  debug:
    var: apply_spec

- name: Retrieve the monitor node IP address from the admin group
  set_fact:
    monitor_ip: "{{ ansible_facts['default_ipv4']['address'] }}"
  delegate_to: "{{ groups['admin'][0] }}"
  run_once: true

- name: Display the monitor IP address
  debug:
    msg: "The monitor node IP is: {{ monitor_ip }}"


- block:
    - name: Bootstrap Ceph cluster with apply_spec
      cephadm_bootstrap:
        mon_ip: "{{ monitor_ip }}"
        dashboard_user: "{{ dashboard_user }}"
        dashboard_password: "{{ dashboard_password }}"
        allow_fqdn_hostname: "{{ allow_fqdn_hostname }}"
        cluster_network: "{{ cluster_network_fact | default(omit) }}"
        single_host_defaults: "{{ single_host_defaults | default(false) }}"
        apply_spec: "{{ apply_spec }}"
        image: "{{ ceph_image | default(omit) }}"
      delegate_to: "{{ groups['admin'][0] }}"
      run_once: true
  when:
    - ceph_conf.stat.exists == false
    - apply_spec is defined

- block:
    - name: Bootstrap Ceph cluster without apply_spec
      cephadm_bootstrap:
        mon_ip: "{{ monitor_ip }}"
        dashboard_user: "{{ dashboard_user }}"
        dashboard_password: "{{ dashboard_password }}"
        allow_fqdn_hostname: "{{ allow_fqdn_hostname }}"
        cluster_network: "{{ cluster_network_fact | default(omit) }}"
        single_host_defaults: "{{ single_host_defaults | default(false) }}"
        image: "{{ ceph_image | default(omit) }}"
      delegate_to: "{{ groups['admin'][0] }}"
      run_once: true
  when:
    - ceph_conf.stat.exists == false
    - apply_spec is not defined

- name: Render the OSD service spec template
  template:
    src: "registry.j2"
    dest: "/tmp/registry.json"
  delegate_to: "{{ groups['admin'][0] }}"
  run_once: true

- name: execute registry config
  shell: 'ceph config-key set mgr/cephadm/registry_credentials "$(cat file.json)"'
  delegate_to: "{{ groups['admin'][0] }}"
  run_once: true
